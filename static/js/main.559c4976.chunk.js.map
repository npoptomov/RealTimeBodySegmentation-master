{"version":3,"sources":["human.jpg","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","videoConstraints","width","height","facingMode","Profile","_useState","useState","_useState2","_slicedToArray","picture","setPicture","webcamRef","React","useRef","imageRef","canvasRef","_useState3","_useState4","visina","setVisina","_useState5","_useState6","kolkovi","setKolkovi","_useState7","_useState8","struk","setStruk","_useState9","_useState10","gradi","setGradi","_useState11","_useState12","ramena","setRamena","capture","useCallback","pictureSrc","current","getScreenshot","runBodysegment","sample","personImg","_ref","_asyncToGenerator","_callee","net","_context","bodyPix","architecture","outputStride","quantBytes","maxDetections","scoreThreshold","console","log","detect","apply","arguments","_ref2","_callee2","person","leftEye","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftAnkle","coloredPartImage","canvas","_context2","segmentPersonParts","internalResolution","segmentationThreshold","allPoses","keypoints","position","y","x","_x","createElement","className","Webcam","audio","ref","screenshotFormat","src","onClick","e","preventDefault","toFixed","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.559c4976.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/human.3823b0be.jpg\";","import React, { useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport personImg from '../human.jpg';\r\n\r\nconst WebcamComponent = () => <Webcam />\r\nconst videoConstraints = {\r\n  width: 640,\r\n  height: 480,\r\n  facingMode: 'user',\r\n}\r\nconst Profile = () => {\r\n  const [picture, setPicture] = useState('');\r\n  const webcamRef = React.useRef(null);\r\n  const imageRef = React.useRef(null);\r\n  const canvasRef = React.useRef(null);\r\n\r\n  const [visina, setVisina] = useState(0);\r\n  const [kolkovi, setKolkovi] = useState(0);\r\n  const [struk, setStruk] = useState(0);\r\n  const [gradi, setGradi] = useState(0);\r\n  const [ramena, setRamena] = useState(0);\r\n\r\n  const capture = React.useCallback(() => {\r\n    const pictureSrc = webcamRef.current.getScreenshot();\r\n    setPicture(pictureSrc);\r\n    runBodysegment();\r\n  });\r\n\r\n  const sample = React.useCallback(() => {\r\n    setPicture(personImg);\r\n    runBodysegment();\r\n  });\r\n\r\n  const runBodysegment = async () => {\r\n    const net = await bodyPix.load({\r\n      architecture: 'ResNet50',\r\n      outputStride: 16,\r\n      quantBytes: 4,\r\n      maxDetections: 10,\r\n      scoreThreshold: 0.3\r\n\r\n    });\r\n    console.log(\"BodyPix model loaded.\");\r\n    detect(net);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n\r\n\r\n    imageRef.current.width = 640;\r\n    imageRef.current.height = 480;\r\n\r\n    canvasRef.current.width = 640;\r\n    canvasRef.current.height = 480;\r\n\r\n    const person = await net.segmentPersonParts(imageRef.current, {\r\n      internalResolution: 'full',\r\n      segmentationThreshold: 0.4\r\n    });\r\n\r\n\r\n    const nose = person.allPoses[0].keypoints[0].position;\r\n    const leftEye = person.allPoses[0].keypoints[1].position;\r\n    const rightEye = person.allPoses[0].keypoints[2].position;\r\n    const leftEar = person.allPoses[0].keypoints[3].position;\r\n    const rightEar = person.allPoses[0].keypoints[4].position;\r\n    const leftShoulder = person.allPoses[0].keypoints[5].position;\r\n    const rightShoulder = person.allPoses[0].keypoints[6].position;\r\n    const leftElbow = person.allPoses[0].keypoints[7].position;\r\n    const rightElbow = person.allPoses[0].keypoints[8].position;\r\n    const leftWrist = person.allPoses[0].keypoints[9].position;\r\n    const rightWrist = person.allPoses[0].keypoints[10].position;\r\n    const leftHip = person.allPoses[0].keypoints[11].position;\r\n    const rightHip = person.allPoses[0].keypoints[12].position;\r\n    const leftKnee = person.allPoses[0].keypoints[13].position;\r\n    const rightKnee = person.allPoses[0].keypoints[14].position;\r\n    const leftAnkle = person.allPoses[0].keypoints[15].position;\r\n    const rightAnkle = person.allPoses[0].keypoints[16].position;\r\n\r\n    setVisina((leftAnkle.y - leftEye.y) * 0.5 * 1.04);\r\n    setKolkovi((leftHip.x - rightHip.x) * 2);\r\n    setStruk((leftWrist.x - rightWrist.x) * 0.5 * 2);\r\n    setGradi((leftElbow.x - rightElbow.x) * 0.5 * 2);\r\n    setRamena((leftShoulder.x - rightShoulder.x) * 0.5);\r\n\r\n    console.log(person);\r\n\r\n    const coloredPartImage = bodyPix.toColoredPartMask(person);\r\n    const opacity = 0.7;\r\n    const flipHorizontal = false;\r\n    const maskBlurAmount = 0;\r\n    const canvas = canvasRef.current;\r\n\r\n    bodyPix.drawMask(\r\n      canvas,\r\n      imageRef.current,\r\n      coloredPartImage,\r\n      opacity,\r\n      maskBlurAmount,\r\n      flipHorizontal\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"mb-5 text-center\">\r\n        React Realtime Body Measurments\r\n      </h2>\r\n\r\n      <div>\r\n        {picture == '' ? (\r\n          <Webcam\r\n            audio={false}\r\n            height={480}\r\n            ref={webcamRef}\r\n            width={640}\r\n            screenshotFormat=\"image/jpeg\"\r\n            videoConstraints={videoConstraints}\r\n          />\r\n        ) : (\r\n          <img\r\n            src={picture}\r\n            ref={imageRef}\r\n          />\r\n        )}\r\n      </div>\r\n      <canvas\r\n        ref={canvasRef}\r\n      />\r\n      <div>\r\n\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            capture();\r\n          }}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Capture\r\n        </button>\r\n        <br /> <br />\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            sample();\r\n          }}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Sample\r\n        </button>\r\n\r\n        <div>\r\n          <h2>Висина: {visina.toFixed(2)}</h2>\r\n          <h2>Обем на колкови: {kolkovi.toFixed(2)}</h2>\r\n          <h2>Обем на струк: {struk.toFixed(2)}</h2>\r\n          <h2>Обем на гради: {gradi.toFixed(2)}</h2>\r\n          <h2>Ширина на рамена: {ramena.toFixed(2)}</h2>\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Profile","import React, { useState } from 'react'\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css'\r\nimport Profile from './components/Profile'\r\nexport default function App() {\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <Profile />\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}